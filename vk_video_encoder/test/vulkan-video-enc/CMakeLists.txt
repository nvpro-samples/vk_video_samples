set(VULKAN_VIDEO_ENC_SOURCES
    Main.cpp
    )

set(VULKAN_VIDEO_ENC_DEFINITIONS
    PRIVATE -DVK_NO_PROTOTYPES
    PRIVATE -DGLM_FORCE_RADIANS)

set(VULKAN_VIDEO_ENC_INCLUDES
    PRIVATE ${VK_VIDEO_ENCODER_LIBS_SOURCE_ROOT}
    PRIVATE ${VK_VIDEO_COMMON_LIBS_SOURCE_ROOT}
    PRIVATE ${CMAKE_CURRENT_BINARY_DIR})

set(VULKAN_VIDEO_ENC_LIBRARIES PRIVATE ${CMAKE_THREAD_LIBS_INIT})

link_directories(
    ${VULKAN_VIDEO_DEVICE_LIBS_PATH}
    ${VULKAN_VIDEO_ENCODER_LIB_PATH}
    ${LIBVKVIDEOENCODER_BINARY_ROOT}
    ${VULKAN_LIB_DIR}
    )

if(WIN32)
    list(APPEND VULKAN_VIDEO_ENC_LIBRARIES PRIVATE ${VULKAN_VIDEO_ENCODER_LIB})
else()
    list(APPEND VULKAN_VIDEO_ENC_LIBRARIES PRIVATE ${SHADERC_SHARED_LIBRARY})
    list(APPEND VULKAN_VIDEO_ENC_LIBRARIES PRIVATE -L${CMAKE_INSTALL_LIBDIR} -l${VULKAN_VIDEO_ENCODER_LIB})
    list(APPEND VULKAN_VIDEO_ENC_LIBRARIES PRIVATE -L${LIBVKVIDEOENCODER_BINARY_ROOT} -l${VULKAN_VIDEO_ENCODER_LIB})
endif()

if(TARGET vulkan)
    list(APPEND VULKAN_VIDEO_ENC_DEFINITIONS PRIVATE -DUNINSTALLED_LOADER="$<TARGET_FILE:vulkan>")
endif()

if(WIN32)
    list(APPEND VULKAN_VIDEO_ENC_DEFINITIONS PRIVATE -DVK_USE_PLATFORM_WIN32_KHR)
    list(APPEND VULKAN_VIDEO_ENC_DEFINITIONS PRIVATE -DWIN32_LEAN_AND_MEAN)
elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
    list(APPEND VULKAN_VIDEO_ENC_LIBRARIES PRIVATE -ldl -lrt -lpthread)
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/..)

list(APPEND VULKAN_VIDEO_ENC_INCLUDES PRIVATE ${VK_VIDEO_COMMON_LIBS_SOURCE_ROOT})
list(APPEND VULKAN_VIDEO_ENC_INCLUDES PRIVATE ${VULKAN_VIDEO_ENCODER_INCLUDE})
list(APPEND VULKAN_VIDEO_ENC_INCLUDES PRIVATE ${VULKAN_VIDEO_APIS_INCLUDE})
list(APPEND VULKAN_VIDEO_ENC_INCLUDES PRIVATE ${VULKAN_VIDEO_APIS_INCLUDE}/vulkan)
list(APPEND VULKAN_VIDEO_ENC_INCLUDES PRIVATE ${VULKAN_VIDEO_APIS_INCLUDE}/nvidia_utils/vulkan)

project (vulkan-video-enc-test)
add_executable(vulkan-video-enc-test ${VULKAN_VIDEO_ENC_SOURCES})
target_compile_definitions(vulkan-video-enc-test ${VULKAN_VIDEO_ENC_DEFINITIONS})
target_include_directories(vulkan-video-enc-test ${VULKAN_VIDEO_ENC_INCLUDES})
target_link_libraries(vulkan-video-enc-test PUBLIC ${VULKAN_VIDEO_ENC_LIBRARIES})
add_dependencies(vulkan-video-enc-test ${VULKAN_VIDEO_ENCODER_LIB} ${SHADERC_LIB})

install(TARGETS vulkan-video-enc-test RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
